// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.huazhuo.shop.web;

import java.io.UnsupportedEncodingException;
import java.util.Arrays;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

import com.huazhuo.shop.bill.ShopBill;
import com.huazhuo.shop.bill.ShopBillDetail;
import com.huazhuo.shop.billenum.BillEnum;
import com.huazhuo.shop.billenum.BillShowEnum;

privileged aspect ShopBillController_Roo_Controller {
    
    @RequestMapping(method = RequestMethod.POST, produces = "text/html")
    public String ShopBillController.create(@Valid ShopBill shopBill, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            populateEditForm(uiModel, shopBill);
            return "shopbills/create";
        }
        uiModel.asMap().clear();
        shopBill.persist();
        return "redirect:/shopbills/" + encodeUrlPathSegment(shopBill.getId().toString(), httpServletRequest);
    }
    
    @RequestMapping(params = "form", produces = "text/html")
    public String ShopBillController.createForm(Model uiModel) {
        populateEditForm(uiModel, new ShopBill());
        return "shopbills/create";
    }
    
    @RequestMapping(method = RequestMethod.PUT, produces = "text/html")
    public String ShopBillController.update(@Valid ShopBill shopBill, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            populateEditForm(uiModel, shopBill);
            return "shopbills/update";
        }
        uiModel.asMap().clear();
        shopBill.merge();
        return "redirect:/shopbills/" + encodeUrlPathSegment(shopBill.getId().toString(), httpServletRequest);
    }
    
    @RequestMapping(value = "/{id}", params = "form", produces = "text/html")
    public String ShopBillController.updateForm(@PathVariable("id") Integer id, Model uiModel) {
        populateEditForm(uiModel, ShopBill.findShopBill(id));
        return "shopbills/update";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE, produces = "text/html")
    public String ShopBillController.delete(@PathVariable("id") Integer id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        ShopBill shopBill = ShopBill.findShopBill(id);
        shopBill.remove();
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/shopbills";
    }
    
    void ShopBillController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("shopBill_billstart_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("shopBill_billend_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("shopBill_createdate_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("shopBill_enterdate_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("shopBill_settledate_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
    }
    
    void ShopBillController.populateEditForm(Model uiModel, ShopBill shopBill) {
        uiModel.addAttribute("shopBill", shopBill);
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("shopbilldetails", ShopBillDetail.findAllShopBillDetails());
        uiModel.addAttribute("billenums", Arrays.asList(BillEnum.values()));
        uiModel.addAttribute("billshowenums", Arrays.asList(BillShowEnum.values()));
    }
    
    String ShopBillController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
